name: build for release
on:
  push:
    tags:
      - release*
  workflow_dispatch:

jobs:

  build-binary:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: windows
            arch: amd64
            output: ${{ github.event.repository.name }}-windows-amd64.exe
          - os: darwin
            arch: amd64
            output: ${{ github.event.repository.name }}-darwin-amd64
          - os: darwin
            arch: arm64
            output: ${{ github.event.repository.name }}-darwin-arm64
          - os: linux
            arch: amd64
            output: ${{ github.event.repository.name }}-linux-amd64
          - os: linux
            arch: arm64
            output: ${{ github.event.repository.name }}-linux-arm64
    
    env:
      CGO_ENABLED: 0
      GOOS: ${{ matrix.os }}
      GOARCH: ${{ matrix.arch }}

    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - run: |
          mkdir -p target &&  go mod tidy && go build -trimpath -ldflags "-w -s -extldflags '-static'" -o target/${{ matrix.output }}
          echo ${{ github.sha }} > target/Release.txt
          date >> target/Release.txt
          cat target/Release.txt

      - uses: actions/upload-artifact@v3
        with:
          name: target
          path: target/*

  upload-release:
    permissions:
      contents: write
    needs:
      - build-binary
    runs-on: ubuntu-latest

    steps:

      - uses: actions/download-artifact@v3
        with:
          name: target
          path: target
          
      - run: ls -al target && ls -R target/ && file target/

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/*

