name: build for release
on:
  push:
    tags:
      - release*
  workflow_dispatch:

jobs:
  build-binary:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: linux
            arch: x86_64-unknown-linux-gnu
            output: ${{ github.event.repository.name }}-linux-amd64
          - os: darwin 
            arch: x86_64-apple-darwin 
            output: ${{ github.event.repository.name }}-darwin-amd64
          # - os: darwin
          #   arch: aarch64-apple-darwin
          #   output: ${{ github.event.repository.name }}-darwin-aarch64
          # - os: linux
          #   arch: armv7-unknown-linux-gnueabihf
          #   output: ${{ github.event.repository.name }}-linux-armv7

    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
          target: ${{ matrix.arch }}
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target ${{ matrix.arch }}

      - run: |
          mv target/${{ matrix.arch }}/release/${{ github.event.repository.name }} target/${{ matrix.output }}
          ls -R target/
          echo ${{ github.sha }} > target/Release.txt
          date >> target/Release.txt
          cat target/Release.txt

      - uses: actions/upload-artifact@v3
        with:
          name: target
          path: |
            target/Release.txt
            target/${{ matrix.output }}


  upload-release:
    permissions:
      contents: write
    needs:
      - build-binary
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: target
          path: target

      - run: ls -al target && ls -R target/ && file target/

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/*
